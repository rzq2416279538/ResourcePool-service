<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.resourcepool.project.business.mapper.TCustomerBookMapper">
    
    <resultMap type="TCustomerBook" id="TCustomerBookResult">
        <result property="bookId"    column="book_id"    />
        <result property="customerId"    column="customer_id"    />
        <result property="customerName"    column="customer_name"    />
        <result property="userId"    column="user_id"    />
        <result property="createTime"    column="create_time"    />
        <result property="isRecovery"    column="is_recovery"    />
        <result property="endTime"    column="end_time"    />

        <result property="customerPhone"    column="customer_phone"    />
        <result property="certificateType"    column="certificate_type"    />
        <result property="certificateSpeciality"    column="certificate_speciality"    />
        <result property="remark"    column="remark"    />
        <result property="addr"    column="addr"    />
        <result property="userName"    column="user_name"    />
        <result property="sources"    column="sources"    />
        <result property="notes"    column="notes"    />
        <result property="deptId"    column="dept_id"    />
    </resultMap>

    <sql id="selectTCustomerBookVo">
        select
            t1.book_id,
            t1.customer_id,
            t1.user_id,
            t1.customer_name,
            t1.create_time,
            t1.is_recovery,
            t1.end_time,
            t1.user_name,
            t1.customer_phone,
            t1.certificate_type,
            t1.certificate_speciality,
            t1.remark,
            t1.addr,
            t1.user_name,
            t1.sources,
            t1.notes,
            t1.dept_id
        from t_customer_book t1
    </sql>

    <select id="selectTCustomerBookList" parameterType="TCustomerBook" resultMap="TCustomerBookResult">
        <include refid="selectTCustomerBookVo"/>
        <where>  
            <if test="customerId != null "> and t1.customer_id = #{customerId}</if>
            <if test="customerName != null  and customerName != ''"> and t1.customer_name like concat('%', #{customerName}, '%')</if>
            <if test="customerPhone != null  and customerPhone != ''"> and t1.customer_phone like concat('%', #{customerPhone}, '%')</if>
            <if test="notes != null  and notes != ''"> and t1.notes like concat('%', #{notes}, '%')</if>
            <if test="userId != null "> and t1.user_id = #{userId}</if>
            <if test="isRecovery != null "> and t1.is_recovery = #{isRecovery}</if>
            <if test="endTime != null "> and t1.end_time = #{endTime}</if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                AND date_format(t1.end_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                AND date_format(t1.end_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
            </if>
        </where>
        order by t1.create_time desc
    </select>

    <select id="selectTCustomerBookListAspect" parameterType="TCustomerBook" resultMap="TCustomerBookResult">
        select
            t1.book_id,
            t1.customer_id,
            t1.user_id,
            t1.customer_name,
            t1.create_time,
            t1.is_recovery,
            t1.end_time,
            t1.user_name,
            t1.customer_phone,
            t1.certificate_type,
            t1.certificate_speciality,
            t1.remark,
            t1.addr,
            t1.user_name,
            t1.sources,
            t1.notes,
            t1.dept_id,
            (select count(*) FROM t_customer_connect where customer_id = t1.customer_id) as connectCount
            from t_customer_book t1
        left join sys_dept d on t1.dept_id = d.dept_id
        <where>
            <if test="customerId != null "> and t1.customer_id = #{customerId}</if>
            <if test="customerName != null  and customerName != ''"> and t1.customer_name like concat('%', #{customerName}, '%')</if>
            <if test="customerPhone != null  and customerPhone != ''"> and t1.customer_phone like concat('%', #{customerPhone}, '%')</if>
            <if test="notes != null  and notes != ''"> and t1.notes like concat('%', #{notes}, '%')</if>
            <if test="userId != null "> and t1.user_id = #{userId}</if>
            <if test="isRecovery != null "> and t1.is_recovery = #{isRecovery}</if>
            <if test="endTime != null "> and t1.end_time = #{endTime}</if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                AND date_format(t1.end_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                AND date_format(t1.end_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
            </if>
            <!-- 数据范围过滤 -->
            ${params.dataScope}
        </where>
        order by t1.create_time desc
    </select>
    
    <select id="selectTCustomerBookByBookId" parameterType="Long" resultMap="TCustomerBookResult">
        <include refid="selectTCustomerBookVo"/>
        where t1.book_id = #{bookId}
    </select>
        
    <insert id="insertTCustomerBook" parameterType="TCustomerBook" useGeneratedKeys="true" keyProperty="bookId">
        insert into t_customer_book
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="customerId != null">customer_id,</if>
            <if test="customerName != null">customer_name,</if>
            <if test="userId != null">user_id,</if>
            <if test="createTime != null">create_time,</if>
            <if test="isRecovery != null">is_recovery,</if>
            <if test="endTime != null">end_time,</if>

            <if test="customerPhone != null">customer_phone,</if>
            <if test="certificateType != null">certificate_type,</if>
            <if test="certificateSpeciality != null">certificate_speciality,</if>
            <if test="remark != null">remark,</if>
            <if test="addr != null">addr,</if>
            <if test="userName != null">user_name,</if>
            <if test="sources != null">sources,</if>
            <if test="notes != null">notes,</if>
            <if test="deptId != null">dept_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="customerId != null">#{customerId},</if>
            <if test="customerName != null">#{customerName},</if>
            <if test="userId != null">#{userId},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="isRecovery != null">#{isRecovery},</if>
            <if test="endTime != null">#{endTime},</if>

            <if test="customerPhone != null">#{customerPhone},</if>
            <if test="certificateType != null">#{certificateType},</if>
            <if test="certificateSpeciality != null">#{certificateSpeciality},</if>
            <if test="remark != null">#{remark},</if>
            <if test="addr != null">#{addr},</if>
            <if test="userName != null">#{userName},</if>
            <if test="sources != null">#{sources},</if>
            <if test="notes != null">#{notes},</if>
            <if test="deptId != null">#{deptId},</if>
         </trim>
    </insert>

    <update id="updateTCustomerBook" parameterType="TCustomerBook">
        update t_customer_book
        <trim prefix="SET" suffixOverrides=",">
            <if test="customerId != null">customer_id = #{customerId},</if>
            <if test="customerName != null">customer_name = #{customerName},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="isRecovery != null">is_recovery = #{isRecovery},</if>
            <if test="endTime != null">end_time = #{endTime},</if>

            <if test="customerPhone != null">customer_phone = #{customerPhone},</if>
            <if test="certificateType != null">certificate_type = #{certificateType},</if>
            <if test="certificateSpeciality != null">certificate_speciality = #{certificateSpeciality},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="addr != null">addr = #{addr},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="sources != null">sources = #{sources},</if>
            <if test="notes != null">notes = #{notes},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
        </trim>
        where book_id = #{bookId}
    </update>

    <delete id="deleteTCustomerBookByBookId" parameterType="Long">
        delete from t_customer_book where book_id = #{bookId}
    </delete>

    <delete id="deleteTCustomerBookByBookIds" parameterType="String">
        delete from t_customer_book where book_id in 
        <foreach item="bookId" collection="array" open="(" separator="," close=")">
            #{bookId}
        </foreach>
    </delete>
</mapper>